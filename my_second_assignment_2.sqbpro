--I will use the format below to reach the table fast.
SELECT * FROM tracks;
SELECT * FROM albums;

-- How many tracks does each album have? Your solution should include Album id and its 
-- number of tracks sorted from highest to lowest.
SELECT tr.AlbumId, count(tr.AlbumId) as num_of_tracks
FROM albums as al
INNER JOIN tracks as tr
ON al.AlbumId=tr.AlbumId
GROUP BY tr.AlbumId 
ORDER BY num_of_tracks DESC;

SELECT * FROM tracks;
SELECT * FROM albums;
--Find the album title of the tracks. Your solution should include track name and its album title.
SELECT tr.name, al.Title
FROM tracks as tr
INNER JOIN albums as al
ON tr.AlbumId=al.AlbumId;

SELECT * FROM tracks;
SELECT * FROM albums;
--Find the minimum duration of the track in each album. Your solution should include album id, 
--album title and duration of the track sorted from highest to lowest.
SELECT tr.AlbumId as my_al_id, al.Title, min(tr.Milliseconds) as my_duration
FROM tracks as tr
INNER JOIN albums as al
ON tr.AlbumId=al.AlbumId
GROUP BY my_al_id
ORDER BY my_duration DESC;

SELECT * FROM tracks;
SELECT * FROM albums;
--Find the total duration of each album. Your solution should include album id, 
--album title and its total duration sorted from highest to lowest.
SELECT tr.AlbumId as my_al_id, al.Title, sum(Milliseconds) as my_duration
FROM albums as al
INNER JOIN tracks as tr
ON al.AlbumId=tr.AlbumId
GROUP BY my_al_id
ORDER BY my_duration DESC;

SELECT * FROM tracks;
SELECT * FROM albums;
--Based on the previous question, find the albums whose total duration is higher than 70 minutes. 
--Your solution should include album title and total duration.
SELECT al.Title as my_title, sum(tr.Milliseconds) 
FROM tracks as tr
INNER JOIN albums as al
ON tr.AlbumId=al.AlbumId
WHERE tr.Milliseconds&gt;70*60000
GROUP BY my_title;
